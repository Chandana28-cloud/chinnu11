import java.io.*;
public class Main 
{
    public static void main(String args[])throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int arr[] = new int[n];
        for(int i=0;i<n;i++)
            arr[i] = Integer.parseInt(br.readLine());
        int k = Integer.parseInt(br.readLine());
        Main m = new Main();
        System.out.println(m.subSets(arr,n,k));
    }
    Boolean subSets(int arr[], int n, int k)
    {
        int sum = 0;
        for(int i=0;i<n;i++)
           sum = sum + arr[i];
        if((sum % k) != 0)
            return false;
        int match_arr[] = new int[k];
        for(int i=0;i<k;i++)
            match_arr[i] = sum/k;
        Boolean status = Main.matchSubSets(arr, n, k, match_arr); 
        System.out.println(status);
        return status;
    }
    static Boolean matchSubSets(int arr[], int n, int k, int match_arr[])
    {
        int count = 0;
        for(int i =0;i<n;i++)
        {
            for(int j=0;j<k;j++)
            {
                if((match_arr[j]!=0) && ((match_arr[j] - arr[i]) >= 0))
                {
                    match_arr[j] = match_arr[j] - arr[i];
                    break;
                }
            }
        }
        for(int i=0;i<k;i++)
        {
            if(match_arr[i] != 0)
            {
                count++;
            }
        }
        if(count == 0)
            return true;
        else
            return false;
    }
}