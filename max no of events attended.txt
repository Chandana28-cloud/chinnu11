import java.util.*;
import java.io.*;
public class MaxNoOfEventsAttended 
{
    public int maxEvents(int[][] events) 
    {
        Arrays.sort(events, (e1, e2) -> Integer.compare(e1[0], e2[0]));
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        int eventIndex = 0, day = 1, result = 0;
        while (eventIndex != events.length || !pq.isEmpty()) 
        {
            while (eventIndex != events.length && events[eventIndex][0] == day) 
            {
                pq.offer(events[eventIndex][1]);
                ++eventIndex;
            }
            while (!pq.isEmpty() && pq.peek() < day) 
                pq.poll();
            if (!pq.isEmpty()) 
            {
                pq.poll();
                ++day;
                ++result;
            } 
            else if (eventIndex != events.length)
                day = events[eventIndex][0];
        }
        return result;
    }
    public static void main(String args[])throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[][] events = new int[n][2];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<2;j++)
                events[i][j] = Integer.parseInt(br.readLine());
        }
        MaxNoOfEventsAttended m = new MaxNoOfEventsAttended();
        System.out.println(m.maxEvents(events));
    }
} 

//TEST CASES 
	input : n = 3
		events[][] = [[1,2],[2,3],[3,4]]
	output: 3
	input : n = 4
		events[][] = [[1,2],[2,3],[3,4],[1,2]]
	output: 4
	input : n = 5
		events[][] = [[1,4],[4,4],[2,2],[3,4],[1,1]]
	output: 4
	input : n = 1
		events[][] = [[1,100000]]
	output : 1
	inputs : n = 7
		 events[][] = [[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7]]
	output : 7

