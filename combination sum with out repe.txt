// The combinationsum of numbers with out repetetion of elements added.

import java.util.*;

class Main 
{
    static void combinationSum(List<Integer> result, int start, int arr[], int n, int sum)
    {
        if(sum < 0 || start < 0)
            return;
        if(sum == 0)
        {
            System.out.println(result);
            return;
        }
        for(int i=start;i<n;i++)
        {
            result.add(arr[i]);
            combinationSum(result, i+1, arr, n, sum-arr[i]);
            result.remove(result.size()-1);
        }
    }
    static void combinations(int arr[], int n, int sum)
    {
        List<Integer> result = new LinkedList<>();
        Arrays.sort(arr);
        combinationSum(result, 0, arr, n, sum);
    }
    public static void main(String args[])
    {
        //Scanner s = new Scanner(System.in);
        int n = 5;//s.nextInt();
        //int arr[] = new int[n];
        //for(int i=0;i<n;i++)
            int arr[] = {1,5,1,2,3}; //s.nextInt();
        int sum = 7; //s.nextInt();    
        combinations(arr, n, sum); 
        int arr2[] = {5,10,12,13,15,18};
        combinations(arr2, 6, 30);
    }
}

output:::
[1, 1, 2, 3]                                                                                                        
[1, 1, 5]                                                                                                           
[2, 5] 
:::                                                                                                             
[5, 10, 15]                                                                                                         
[5, 12, 13]                                                                                                         
[12, 18]   